{"version":3,"sources":["pages lazy /^/.//.*$/ groupOptions: {} namespace object","routes/router.ts","routes/index.tsx","redux-setup/home/slice.ts","shared/libs/history.ts","redux-setup/auth/slice.ts","redux-setup/auth/index.ts","services/Auth/index.ts","shared/definitions/config/index.ts","services/Http/index.ts","shared/definitions/api/index.ts","services/Api/product.ts","shared/utils/index.ts","redux-setup/home/saga.ts","redux-setup/home/index.ts","redux-setup/root-reducer.ts","redux-setup/sagas.ts","redux-setup/store.ts","i18n.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","routes","path","groups","component","Router","Suspense","fallback","renderRouters","arr","prefix","listRoutes","route","replace","push","exact","React","lazy","length","concat","render","to","slice","createSlice","name","initialState","reducers","add","state","actions","reducer","_history","this","history","isLogin","logout","store","dispatch","History","BASE_API_URL","process","options","_http","axios","create","interceptorsRequest","interceptorsResponse","url","config","get","data","post","put","patch","delete","head","interceptors","request","use","console","log","response","value","AuthService","baseURL","PRODUCT_API","getProductById","Http","link","params","compile","toString","test","rootSaga","ProductApi","type","takeEvery","home","auth","all","fork","homeSaga","sagaMiddleware","createSagaMiddleware","configureStore","rootReducer","devTools","preloadedState","enhancers","reduxBatch","middleware","getDefaultMiddleware","thunk","run","sagas","i18n","Backend","initReactI18next","init","backend","loadPath","lng","App","useHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0ba3a736.chunk.js","sourcesContent":["var map = {\n\t\"./Error/NotFound\": [\n\t\t56,\n\t\t1\n\t],\n\t\"./Error/NotFound.tsx\": [\n\t\t56,\n\t\t1\n\t],\n\t\"./Home\": [\n\t\t27,\n\t\t0\n\t],\n\t\"./Home/\": [\n\t\t27,\n\t\t0\n\t],\n\t\"./Home/index\": [\n\t\t27,\n\t\t0\n\t],\n\t\"./Home/index.tsx\": [\n\t\t27,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 72;\nmodule.exports = webpackAsyncContext;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { RouteProps } from 'react-router-dom';\n\nexport type IListRoute = IRoute[];\n\ntype IRoute = {\n  path: string;\n  exact?: boolean;\n  groups?: IListRoute;\n  component: string;\n};\n\nconst routes: IListRoute = [\n  {\n    path: '/',\n    groups: [\n      {\n        path: '/home',\n        component: 'Home',\n        groups: [\n          {\n            path: '/test',\n            component: 'Home',\n          },\n        ],\n      },\n    ],\n    component: 'Home',\n  },\n  {\n    path: '/404',\n    component: 'Error/NotFound',\n  },\n];\n\nexport default routes;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport routes, { IListRoute } from './router';\n\nconst Router: React.FunctionComponent = () => {\n  function renderRouters(arr: IListRoute, prefix = '/') {\n    let listRoutes: any[] = [];\n\n    arr.map((route) => {\n      const { path } = route;\n      prefix = `${prefix}${path}`.replace(/^\\/\\//, '/');\n\n      listRoutes.push(\n        <Route\n          key={prefix}\n          path={prefix}\n          exact={!route?.exact}\n          component={React.lazy(() => import(`../pages/${route.component}`))}\n        />,\n      );\n      // eslint-disable-next-line operator-linebreak\n      route?.groups?.length &&\n        (listRoutes = listRoutes.concat(renderRouters(route.groups, prefix)));\n    });\n\n    return listRoutes;\n  }\n\n  return (\n    <React.Suspense fallback={<div>Loading....</div>}>\n      <Switch>\n        {renderRouters(routes)}\n        <Route render={() => <Redirect to=\"/404\" />} />\n      </Switch>\n    </React.Suspense>\n  );\n};\n\nexport default Router;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'home',\n  initialState: 0,\n  reducers: {\n    add: (state) => state + 1,\n  },\n});\n\nexport const { actions, reducer } = slice;\n","import { History as H } from 'history';\n\nclass History {\n  private _history!: H;\n\n  get history(): H {\n    return this._history;\n  }\n\n  set history(history: H) {\n    this._history = history;\n  }\n}\n\nexport default new History();\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState: {\n    isLogin: true,\n  },\n  reducers: {\n    logout: (state) => ({ ...state, isLogin: false }),\n  },\n});\n\nexport const { actions, reducer } = slice;\n","import * as slice from './slice';\n// import saga from './saga';\n\nexport const { logout } = slice.actions;\n// export { saga };\nexport default slice.reducer;\n","/* eslint-disable class-methods-use-this */\nimport { store } from '@redux/store';\nimport { logout } from '@redux/auth';\nimport History from '@/shared/libs/history';\n\nclass Auth {\n  logout() {\n    store.dispatch(logout());\n    History.history.push('/login');\n  }\n}\n\nexport default new Auth();\n","export const BASE_API_URL = process.env.BASE_API_URL || 'http://localhost:3000';\n","/* eslint-disable func-names */\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport History from '@/shared/libs/history';\nimport AuthService from '@services/Auth';\n\nimport { BASE_API_URL } from '@definitions/config';\n\nclass Http {\n  private _http: AxiosInstance;\n\n  /**\n   *\n   * @param options AxiosRequestConfig\n   */\n  public constructor(options: AxiosRequestConfig) {\n    // eslint-disable-next-line no-underscore-dangle\n    this._http = axios.create(options);\n    this.interceptorsRequest();\n    this.interceptorsResponse();\n  }\n\n  /**\n   *\n   * @param url string\n   * @param config AxiosRequestConfig\n   */\n  public get(url: string, config?: AxiosRequestConfig | undefined): Promise<AxiosResponse> {\n    return this._http.get(url, config);\n  }\n\n  /**\n   *\n   * @param url\n   * @param data\n   * @param config\n   */\n  public post(url: string, data?: any, config?: AxiosRequestConfig | undefined) {\n    return this._http.post(url, data, config);\n  }\n\n  /**\n   *\n   * @param url\n   * @param data\n   * @param config\n   */\n  public put(url: string, data?: any, config?: AxiosRequestConfig | undefined) {\n    return this._http.put(url, data, config);\n  }\n\n  /**\n   *\n   * @param url\n   * @param data\n   * @param config\n   */\n  public patch(url: string, data?: any, config?: AxiosRequestConfig | undefined) {\n    return this._http.patch(url, data, config);\n  }\n\n  /**\n   *\n   * @param url\n   * @param data\n   * @param config\n   */\n  public delete(url: string, config?: AxiosRequestConfig | undefined) {\n    return this._http.delete(url, config);\n  }\n\n  /**\n   *\n   * @param url\n   * @param data\n   * @param config\n   */\n  public head(url: string, config?: AxiosRequestConfig | undefined) {\n    return this._http.head(url, config);\n  }\n\n  /**\n   *\n   * @param url\n   * @param data\n   * @param config\n   */\n  public options(url: string, config?: AxiosRequestConfig | undefined) {\n    return this._http.options(url, config);\n  }\n\n  /**\n   *\n   */\n  private interceptorsRequest(): void {\n    this._http.interceptors.request.use((config: AxiosRequestConfig) => {\n      console.log(\n        '🚀 ~ file: index.ts ~ line 33 ~ Http ~ this._http.interceptors.request.use ~ config',\n        config,\n      );\n      return config;\n    });\n  }\n\n  /**\n   *\n   */\n  private interceptorsResponse(): void {\n    this._http.interceptors.response.use((value: AxiosResponse) => {\n      const { data } = value;\n      const status = 401;\n      if (status === 401 || status === 412) {\n        return AuthService.logout();\n      }\n\n      if (status === 403) {\n        return History.history.push('/404');\n      }\n      return data;\n    });\n  }\n}\n\nexport default new Http({\n  baseURL: BASE_API_URL,\n});\n","export const PRODUCT_API = {\n  BY_ID: '/product/:id/test',\n};\n","import Http from '@services/Http';\nimport { PRODUCT_API } from '@definitions/api';\nimport { compileUrl } from '@utils/index';\n\nexport const getProductById = (options: ValueOptions | undefined) =>\n  Http.get(compileUrl(PRODUCT_API.BY_ID, options?.params));\n","import { compile } from 'path-to-regexp';\n\nexport const compileUrl = (\n  link: string,\n  params?: { [x: string]: string | number } | undefined,\n): string => {\n  const url = compile(link)(params);\n  return url.toString();\n};\n","import { takeEvery, put } from 'redux-saga/effects';\nimport { ProductApi } from '@services/Api';\n\nfunction* test() {\n  const data = yield ProductApi.getProductById({\n    params: {\n      id: 123,\n    },\n  });\n  console.log('🚀 ~ file: saga.ts ~ line 6 ~ function*test ~ data', data);\n  yield put({ type: 'home/add' });\n}\n\nexport default function* rootSaga() {\n  yield takeEvery('TEST_TEST', test);\n}\n","import * as slice from './slice';\nimport saga from './saga';\n\nexport const { add } = slice.actions;\nexport { saga };\nexport default slice.reducer;\n","import home from '@redux/home';\nimport auth from '@redux/auth';\n\nexport default { home, auth };\n","import { all, fork } from 'redux-saga/effects';\n\nimport { saga as homeSaga } from '@redux/home';\n\nexport default function* rootSaga() {\n  yield all([fork(homeSaga)]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { reduxBatch } from '@manaflair/redux-batch';\nimport createSagaMiddleware from 'redux-saga';\n\n//\nimport rootReducer from '@redux/root-reducer';\nimport sagas from '@redux/sagas';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: { home: 1000 },\n  enhancers: [reduxBatch],\n  middleware: [...getDefaultMiddleware({ thunk: false }), sagaMiddleware],\n});\n\nsagaMiddleware.run(sagas);\n\nexport { store };\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n    },\n    lng: 'jp',\n  });\nexport default i18n;\n","// global import\nimport React, { FunctionComponent } from 'react';\nimport { Provider } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n// Local import\n// import HttpService from '@services/Http';\nimport ListRouter from '@routes/index';\nimport { store } from '@redux/store';\nimport History from '@/shared/libs/history';\n\n// i18n\nimport '@/i18n';\n\nconst App: FunctionComponent = () => {\n  History.history = useHistory();\n  return (\n    <Provider store={store}>\n      <ListRouter />\n    </Provider>\n  );\n};\n\nexport default App;\n","/* eslint-disable object-curly-newline */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}